{"version":3,"sources":["App.js","index.js"],"names":["request","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","path","response","url","wrap","_context","prev","next","concat","axios","get","sent","t0","abrupt","stop","this","_x","apply","arguments","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","authors","setState","data","soundPath","_this2","react_default","createElement","className","role","keys","map","author","key","sound","onClick","handleOnClick","Component","console","log","process","SERVER_PORT","socket","require","connect","bullySound","Audio","on","text","pause","currentTime","window","Notification","permission","play","requestPermission","alert","notifyMe","ReactDOM","render","src_App_0","serverPort","document","getElementById"],"mappings":"kSAOMA,SAAO,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAINH,EAJM,IAAAK,OAIIP,GAJJI,EAAAE,KAAA,EAMKE,IAAMC,IAAIP,GANf,OAMZD,EANYG,EAAAM,KAAAN,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,uBAAAA,EAAAQ,OAAA,SAUPX,GAVO,yBAAAG,EAAAS,SAAAd,EAAAe,KAAA,YAAH,gBAAAC,GAAA,OAAAtB,EAAAuB,MAAAF,KAAAG,YAAA,IAkDEC,cApCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA1B,OAAA2B,EAAA,EAAA3B,CAAAoB,KAAAI,IACjBE,EAAA1B,OAAA4B,EAAA,EAAA5B,CAAAoB,KAAApB,OAAA6B,EAAA,EAAA7B,CAAAwB,GAAAM,KAAAV,KAAMK,KACDM,MAAQ,CACXC,QAAS,IAHMN,kNAQM5B,EAAQ,eAAzBS,SAENa,KAAKa,SAAS,CAAED,QAASzB,EAAS2B,+IAGtBC,GACZ,OAAOrC,EAAQqC,oCAGR,IAAAC,EAAAhB,KACP,OAAOiB,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,iBACpBF,EAAAlC,EAAAmC,cAAA,UAAQC,UAAU,eAAeC,KAAK,UACpCH,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,UACbF,EAAAlC,EAAAmC,cAAA,0BAGHtC,OAAOyC,KAAKrB,KAAKW,MAAMC,SAASU,IAAI,SAACC,GAAD,OACnCN,EAAAlC,EAAAmC,cAAA,OAAKM,IAAKD,EAAQJ,UAAU,cAC1BF,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,gBAAgBI,GAC/BN,EAAAlC,EAAAmC,cAAA,OAAKC,UAAU,eACdH,EAAKL,MAAMC,QAAQW,GAAQD,IAAI,SAACG,GAAD,OAAWR,EAAAlC,EAAAmC,cAAA,UAAQQ,QAAS,kBAAMV,EAAKW,cAAL,GAAAlC,OAAsB8B,EAAtB,KAAA9B,OAAgCgC,KAAUD,IAAKC,EAAON,UAAU,cAAcM,iBA7BxIG,aChBlBC,QAAQC,IAAI,MAAOC,8CAAYC,aAE/B,IAEIC,EAFKC,EAAQ,IAEDC,QAAQ,KACpBC,EAAa,IAAIC,MA2BrBJ,EAAOK,GAAG,WAAY,SAAUb,EAAOc,GACrCH,EAAWI,QACXJ,EAAWK,YAAc,EA3B3B,SAAkBhB,EAAOc,GAEvBH,EAAa,IAAIC,MAAMZ,GACjB,iBAAkBiB,OAGa,YAA5BC,aAAaC,YAEpB,IAAID,aAAaJ,GAEjBH,EAAWS,QAGwB,WAA5BF,aAAaC,YACpBD,aAAaG,kBAAkB,SAAUF,GACpB,YAAfA,IAEF,IAAID,aAAaJ,GAEjBH,EAAWS,UAffE,MAAM,sDAyBRC,CAASvB,EAAOc,KAGlBU,IAASC,OAAOjC,EAAAlC,EAAAmC,cAACiC,EAAD,CAAKC,WAAYrB,8CAAYC,cAAiBqB,SAASC,eAAe","file":"static/js/main.c337befd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\n//const BASE_PATH = 'http://localhost:3001';\n//const BASE_PATH = 'http://localhost';\n\nconst request = async (path) => {\n  let response;\n\n  try {\n    const url = `/${path}`;\n\n    response = await axios.get(url);\n  } catch (error) {\n  }\n\n  return response;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      authors: {}\n    }\n  }\n\n  async componentWillMount() {\n    const response = await request('list');\n\n    this.setState({ authors: response.data });\n  }\n  \n  handleOnClick(soundPath) {\n    return request(soundPath);\n  }\n\n  render() {\n    return <div className='app-container'>\n      <header className='globalHeader' role='banner'>\n        <div className='Banner'>\n          <h2>Bullyteer!</h2>\n        </div>\n      </header>\n      {Object.keys(this.state.authors).map((author) =>\n        <div key={author} className='author-row'>\n          <div className='author-title'>{author}</div>\n          <div className='sounds-list'>\n          {this.state.authors[author].map((sound) => <button onClick={() => this.handleOnClick(`${author}/${sound}`)} key={sound} className='sound-item'>{sound}</button>)}\n          </div>\n        </div>\n      )}\n    </div>;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconsole.log('env', process.env.SERVER_PORT);\n\nvar io = require('socket.io-client');\n// var socket = io.connect('http://localhost:8080');\nvar socket = io.connect('/');\nvar bullySound = new Audio()\n\nfunction notifyMe(sound, text) {\n  // bullySound = new Audio(`http://localhost:3001/${sound}`);\n  bullySound = new Audio(sound);\n  if (!(\"Notification\" in window)) {\n    alert(\"This browser does not support desktop notification\");\n  }\n  else if (Notification.permission === \"granted\") {\n\n    new Notification(text);\n\n    bullySound.play();\n  }\n\n  else if (Notification.permission !== 'denied') {\n    Notification.requestPermission(function (permission) {\n      if (permission === \"granted\") {\n\n        new Notification(text);\n\n        bullySound.play();\n      }\n    });\n  }\n}\n\nsocket.on('messages', function (sound, text) {\n  bullySound.pause();\n  bullySound.currentTime = 0;\n\n  notifyMe(sound, text);\n});\n\nReactDOM.render(<App serverPort={process.env.SERVER_PORT} />, document.getElementById('root'));\n"],"sourceRoot":""}